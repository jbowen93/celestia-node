name: "docker-build"

on:
  pull_request:
  push:
    branches:
      - "main"
    tags:
      - "v*"
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ github.repository }}
  REGISTRY: ghcr.io

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  docker-build:
    runs-on: "ubuntu-latest"
    permissions:
      contents: write
      packages: write
    steps:
      - uses: "actions/checkout@v3"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta (Pull Request)
        if: ${{ github.event_name == 'pull_request' }}
        id: meta-pr
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value={{github.event.pull_request.head.sha}}
      - name: Docker meta (Main)
        if: ${{ github.event_name != 'pull_request' }}
        id: meta-main
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=semver,pattern={{version}}
      - name: Build and Push amd64 Image
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta-pr.outputs.tags }}
          file: docker/Dockerfile
      - name: Build and Push amd64+arm64 Images
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/build-push-action@v3
        with:
          platforms: linux/arm64, linux/amd64
          push: true
          tags: ${{ steps.meta-main.outputs.tags }}
          file: docker/Dockerfile
